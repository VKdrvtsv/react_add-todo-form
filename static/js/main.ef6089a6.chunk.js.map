{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","initialTodo","App","useState","setTodos","value","setValue","setUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","newTodo","currentTodos","addTodo","Math","max","htmlFor","type","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef6089a6.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/user';\n\nexport function getUserById(userId: number): User | undefined {\n  return usersFromServer.find(user => user.id === userId);\n}\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { Todo } from './types/todo';\nimport { getUserById } from './services/user';\n\nconst initialTodo = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodo);\n  const [value, setValue] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const addTodo = (newTodo: Todo) => {\n    let currentTodos = todos;\n\n    setTodos(currentTodos = [...currentTodos, newTodo]);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const reset = () => {\n    setValue('');\n    setUserId(0);\n  };\n\n  const createTodoId = () => {\n    return Math.max(...todos.map(todo => todo.id)) + 1;\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!value);\n    setHasUserError(userId === 0);\n\n    if (!value || userId === 0) {\n      return;\n    }\n\n    addTodo({\n      id: createTodoId(),\n      title: value,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"todo-title\">Title: </label>\n          <input\n            id=\"todo-title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={value}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"todo-user\">User: </label>\n          <select\n            id=\"todo-user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}